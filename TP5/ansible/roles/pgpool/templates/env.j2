# Configuration de l'administrateur
PGPOOL_ADMIN_USERNAME=postgres
PGPOOL_ADMIN_PASSWORD=postgres
PGPOOL_POSTGRES_USERNAME=postgres
PGPOOL_POSTGRES_PASSWORD=postgres

# Configuration des backend nodes
PGPOOL_BACKEND_NODES={% for host in groups['master'] + groups['slaves'] %}{{ loop.index0 }}:{{ hostvars[host]['ansible_host'] }}:5432{% if not loop.last %},{% endif %}{% endfor %}

PGPOOL_BACKEND_HOSTNAMES={% for host in groups['master'] + groups['slaves'] %}pg_{{ 'master' if loop.index0 == 0 else 'slave' + (loop.index0 - 1)| string }}{% if not loop.last %},{% endif %}{% endfor %}


{% for host in groups['master'] + groups['slaves'] %}

PGPOOL_BACKEND_HOST_{{ loop.index0 }}={{ hostvars[host]['ansible_host'] }}
PGPOOL_BACKEND_PORT_{{ loop.index0 }}=5432
PGPOOL_BACKEND_WEIGHT_{{ loop.index0 }}=1

{% endfor %}

# Configuration de la vérification de réplication
PGPOOL_SR_CHECK_USER=postgres
PGPOOL_SR_CHECK_PASSWORD=postgres
PGPOOL_SR_CHECK_PERIOD=10
PGPOOL_HEALTH_CHECK_PERIOD=10
PGPOOL_HEALTH_CHECK_TIMEOUT=5
PGPOOL_HEALTH_CHECK_USER=postgres
PGPOOL_HEALTH_CHECK_PASSWORD=postgres

# Configuration du load balancing
PGPOOL_ENABLE_LOAD_BALANCING=yes
PGPOOL_LOAD_BALANCE_MODE=on
PGPOOL_MAX_POOL={{ (groups['slaves'] + groups['master']) | length }}

# Configuration du port
PGPOOL_PORT=5432
